plugins {
    id 'org.springframework.boot' version '2.5.6'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
    id 'idea'
    id 'org.flywaydb.flyway' version '6.4.3'
    id 'com.adarshr.test-logger' version '3.1.0'
    id 'maven-publish'
    id 'jacoco'
}

testlogger {
    theme 'mocha'
    showExceptions true
    showStackTraces true
    showFullStackTraces false
    showCauses true
    slowThreshold 2000
    showSummary true
    showSimpleNames false
    showPassed true
    showSkipped true
    showFailed true
    showStandardStreams false
    showPassedStandardStreams true
    showSkippedStandardStreams true
    showFailedStandardStreams true
    logLevel 'lifecycle'
}

def springfoxUiVersion = '2.9.2'
def flywayVersion = "6.4.3"
def streamExVersion = "0.8.0"
def springFoxStarterVersion = "3.0.0"
def assertJVersion = "3.21.0"
def mockitoInlineVersion = "3.4.6"

flyway {
    url = "jdbc:mysql://localhost:3306/users"
    user = "root"
    password = ""
}

jacoco {
    toolVersion = "0.8.7" //jacoco version
    reportsDir = file("$buildDir/reports/jacoco") //default directory where jacoco generates test reports
}

test {
    finalizedBy jacocoTestReport
}
jacocoTestReport {
    dependsOn test // tests are required to run before generating the report

    afterEvaluate {
        classDirectories.setFrom(files(classDirectories.files.collect {
            fileTree(dir: it, exclude: [
                    "**/response/*",
                    "**/request/*",
                    "**/dtos/*",
                    "**/models/*",
                    "**/configuration/*",
                    "**/shared/*",
                    "**/enums/*",
                    "com/cornershopapp/usersapi/UsersApiApplication.*"
            ])
        }))
    }
}

apply plugin: "groovy"

group = "com.cornershopapp"
version = "0.0.1-SNAPSHOT"
sourceCompatibility = "16"

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

publishing {
    publications {
        maven(MavenPublication) {
            groupId = "com.cornershopapp"
            artifactId = "users-api"
            version = "1.0"

            from components.java
        }
    }
}

repositories {
    mavenCentral()
    mavenLocal()
}

dependencies {
    //developmentOnly "org.springframework.boot:spring-boot-devtools"

    annotationProcessor "org.projectlombok:lombok"
    annotationProcessor "org.springframework.boot:spring-boot-configuration-processor"

    compileOnly "org.projectlombok:lombok"

    runtimeOnly "mysql:mysql-connector-java"
    runtimeOnly "com.h2database:h2"

    implementation "org.springframework.boot:spring-boot-starter-validation"
    implementation "org.springframework.boot:spring-boot-starter-data-jpa"
    implementation "org.springframework.boot:spring-boot-starter-web"
    implementation "org.codehaus.groovy:groovy"
    implementation "org.flywaydb:flyway-core:${flywayVersion}"
    implementation "one.util:streamex:${streamExVersion}"
    implementation "com.fasterxml.jackson.datatype:jackson-datatype-jsr310"
    implementation "io.springfox:springfox-boot-starter:${springFoxStarterVersion}"
    implementation "io.springfox:springfox-swagger-ui:${springfoxUiVersion}"
    implementation "org.springframework.boot:spring-boot-starter-cache"
    implementation "org.springframework.boot:spring-boot-starter-data-redis"

    testImplementation "org.springframework.boot:spring-boot-starter-test"
    testImplementation "org.assertj:assertj-core:${assertJVersion}"
    testImplementation "org.mockito:mockito-junit-jupiter"
    testImplementation "org.mockito:mockito-inline:${mockitoInlineVersion}"

    testImplementation('org.testcontainers:junit-jupiter:1.15.1')
    testImplementation('org.testcontainers:mysql:1.15.1')
}

test {
    useJUnitPlatform()
}

//bootRun.dependsOn rootProject.tasks["flywayMigrate']
